
services:
  web:
    image: nginx:latest
    container_name: laravel-web
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - laravel-storage:/var/www/storage
    ports:
      # Map port 9001 (for web / main app)
      - "${NGINX_PORT:-9090}:80"
    environment:
      - NGINX_HOST=localhost
    networks:
      - laravel-network
    depends_on:
      - php-fpm

  # For the php-fpm service, we will create a custom image to install the necessary PHP extensions and setup proper permissions.
  php-fpm:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    container_name: laravel-php-fpm
    restart: unless-stopped
    env_file:
      - .env
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ./:/var/www
      # - laravel-storage:/var/www/storage
    ports:
      - ":9000"       # Map port 9000 (php-fpm)
      - "9001:9001"   # Map port 9001 (supervisor)
      - "5173:5173"   # Map port 5173 (vite)
    networks:
      - laravel-network
    depends_on:
      - postgres
      - redis
      - pgadmin

  postgres:
    image: postgres:16
    container_name: laravel-postgres
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE:-app}
      - POSTGRES_USER=${POSTGRES_USERNAME:-laravel}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/postgres.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    networks:
      - laravel-network
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: laravel-pgadmin
    restart: unless-stopped
    ports:
      - 5055:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@pgadmin.com
      - PGADMIN_DEFAULT_PASSWORD=secret
    networks:
      - laravel-network
    depends_on:
      - postgres

  redis:
    image: redis:alpine
    container_name: laravel-redis
    restart: unless-stopped
    networks:
      - laravel-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  laravel-network:

volumes:
  postgres-data:
  laravel-storage:
